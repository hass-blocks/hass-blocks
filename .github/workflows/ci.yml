name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [18, 20, 22, 23]
        target: [test, e2e-test]

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
      - run: pnpm run ${{ matrix.target }}
        env:
          NX_KEY: ${{ secrets.NX_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}

  generate-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
      - run: pnpx nx run-many --targets generate-api
        env:
          NX_KEY: ${{ secrets.NX_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-generate-types
          path: |
            **/dist
            !**/node_modules/**

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
      - run: pnpx nx run-many --targets build
        env:
          NX_KEY: ${{ secrets.NX_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-build
          path: |
            **/dist
            !**/node_modules/**

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        check: [lint, check-style]
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4
      - run: pnpm run ${{ matrix.check }}
        env:
          NX_KEY: ${{ secrets.NX_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}

  release:
    runs-on: ubuntu-latest
    needs: [checks, test, build, generate-api]
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: https://registry.npmjs.org/

      - run: pnpm install --frozen-lockfile
      - run: git config --global user.email "bwainwright28@gmail.com"
      - run: git config --global user.name "Ben Wainwright"

      - uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          merge-multiple: true

      - run: npx nx release --yes --dry-run
        if: ${{ github.event.act }}

      - run: pnpm run release
        if: ${{ !github.event.act }}
        env:
          NX_KEY: ${{ secrets.NX_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0

      - name: Push changes
        if: ${{ !github.event.act }}
        uses: ad-m/github-push-action@master
        env:
          HUSKY: 0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  # deploy-docs:
  #   runs-on: ubuntu-latest
  #   needs: [release]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         filter: tree:0
  #         fetch-depth: 0

  #     - uses: pnpm/action-setup@v4
  #       with:
  #         version: 10

  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'pnpm'
  #         registry-url: https://registry.npmjs.org/

  #     - run: pnpm install --frozen-lockfile

  #     - run: npx typedoc
  #     - run: pnpx nx run docs-site:deploy
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
